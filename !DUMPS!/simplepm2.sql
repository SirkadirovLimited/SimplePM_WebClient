-- phpMyAdmin SQL Dump
-- version 4.7.0
-- https://www.phpmyadmin.net/
--
-- Хост: localhost
-- Час створення: Лип 30 2018 р., 23:58
-- Версія сервера: 5.7.22-log
-- Версія PHP: 7.1.1

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База даних: `simplepm2`
--
CREATE DATABASE IF NOT EXISTS `simplepm2` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
USE `simplepm2`;

-- --------------------------------------------------------

--
-- Структура таблиці `spm_olympiads`
--
-- Створення: Квт 23 2018 р., 18:40
--

DROP TABLE IF EXISTS `spm_olympiads`;
CREATE TABLE IF NOT EXISTS `spm_olympiads` (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` tinytext NOT NULL,
  `description` text,
  `startTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `endTime` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `teacherId` bigint(20) UNSIGNED NOT NULL,
  `type` enum('Private','Public') NOT NULL,
  `userCanExit` tinyint(1) NOT NULL DEFAULT '0',
  `judge` tinytext NOT NULL,
  `problems_list` mediumtext NOT NULL,
  `requiredRating` mediumint(8) UNSIGNED NOT NULL,
  `citedScore` smallint(5) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Структура таблиці `spm_problems`
--
-- Створення: Квт 22 2018 р., 15:49
--

DROP TABLE IF EXISTS `spm_problems`;
CREATE TABLE IF NOT EXISTS `spm_problems` (
  `id` mediumint(8) UNSIGNED NOT NULL AUTO_INCREMENT,
  `enabled` tinyint(1) NOT NULL DEFAULT '1',
  `difficulty` tinyint(3) UNSIGNED NOT NULL,
  `category_id` smallint(5) UNSIGNED NOT NULL,
  `name` tinytext NOT NULL,
  `description` mediumtext NOT NULL,
  `input_description` mediumtext,
  `output_description` mediumtext,
  `authorSolution` mediumblob NOT NULL,
  `authorSolutionLanguage` tinytext NOT NULL,
  `adaptProgramOutput` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп даних таблиці `spm_problems`
--

INSERT INTO `spm_problems` (`id`, `enabled`, `difficulty`, `category_id`, `name`, `description`, `input_description`, `output_description`, `authorSolution`, `authorSolutionLanguage`, `adaptProgramOutput`) VALUES
(1001, 1, 1, 1, 'Hello, world!', '<p>Напишіть програму, що виведе у <strong>вихідний потік</strong> рядок \"Hello, world!\" і одразу ж завершить свою роботу.</p>', '<p><strong>Вхідні дані</strong> не надаються.</p>', '<p>В <strong>вихідний потік</strong> вивести фразу \"Hello, world!\".</p>', 0x7573696e672053797374656d3b0d0a0d0a6e616d6573706163652070726f626c656d0d0a7b0d0a202020200d0a20202020636c617373204d61696e436c6173730d0a202020207b0d0a20202020202020200d0a20202020202020207075626c69632073746174696320766f6964204d61696e28290d0a20202020202020207b0d0a202020202020202020202020436f6e736f6c652e57726974654c696e65282248656c6c6f2c20776f726c642122293b0d0a20202020202020207d0d0a20202020202020200d0a202020207d0d0a202020200d0a7d, 'csharp', 1),
(1002, 1, 1, 1, 'A+B', 'Вивести у стандартний вихідний потік суму A і B.', 'У вхідному потоці надаються 2 цілих числа через пробіл, що знаходяться у проміжку від -32000 до 32000.', 'В вихідний потік вивести суму чисел, що надані у вхідному потоці.', 0x76617220612c623a696e74656765723b0d0a626567696e0d0a20202020726561646c6e28612c62293b0d0a20202020777269746528612b62293b0d0a656e642e, 'freepascal', 1),
(1003, 1, 1, 1, 'C+D', 'Вивести на екран суму речових&amp;nbsp;чисел C и D.', 'У вхідному потоці надано 2 речових числа, що знаходяться у діапазоні від -32000 до 32000.', 'Вивести на екран суму наданих чисел із точністю 3 знаки після точки.', 0x76617220632c643a7265616c3b0d0a626567696e0d0a20202020726561646c6e28632c64293b0d0a2020202077726974652828632b64293a303a33293b0d0a656e642e, 'freepascal', 1),
(1004, 1, 1, 8, 'Первый символ', '<p>Дана строка, состоящая из заглавных английских букв и цифр. Вывести первый символ строки.</p>', '<p>В единственной строке входного потока дана строка символов, длина которой не превышает 255.</p>', '<p>В выходной поток вывести единственный символ.</p>', 0x76617220733a737472696e673b0d0a2020202020206e3a696e74656765723b0d0a626567696e0d0a20202020726561646c6e2873293b0d0a20202020777269746528735b315d293b0d0a656e642e, 'freepascal', 1),
(1005, 1, 4, 8, 'Буква в окружении', '<p>Определить количество букв, у которых оба соседа - гласные буквы.</p>', '<p>Во входном потоке дана строка, состоящая только из ЗАГЛАВНЫХ букв английского алфавита. Длина строки не превышает 255 символов.</p>', '<p>В выходной поток вывести единственное целое число.</p>', 0x76617220733a737472696e673b0d0a202020202020722c693a696e74656765723b0d0a626567696e0d0a20202020726561646c6e2873293b0d0a20202020723a3d303b0d0a20202020666f7220693a3d3220746f206c656e6774682873292d3120646f0d0a202020202020202069662028735b692d315d20696e205b2749272c2755272c274f272c2759272c2745272c2741275d2920414e442028735b692b315d20696e205b2749272c2755272c274f272c2759272c2745272c2741275d29207468656e20723a3d722b313b0d0a2020202077726974652872293b0d0a656e642e, 'freepascal', 1),
(1006, 1, 3, 8, 'Предыдущая буква', '<p>Определить предудущую заданной в английском алфавите букву. Если дана первая буква, то вывести последнюю.</p>', '<p>Во входном потоке задана единственная заглавная буква английского алфавита.</p>', '<p>В выходной поток вывести единственную букву.</p>', 0x76617220633a636861723b0d0a626567696e0d0a20726561642863293b0d0a2069662028633d27412729207468656e2077726974652028275a27290d0a2020202020656c736520777269746528636872286f72642863292d3129293b0d0a656e642e, 'freepascal', 1),
(1007, 1, 4, 8, 'Только цифры', '<p>Дана строка, состоящая из больших английских букв и цифр. Получить строку, состоящую их цифр исходной строки сохраняя порядок следования.&nbsp;</p><p>Если в строке нет символов-цифр, то вывести \"NO\".</p>', '<p>Во входном потоке задана строка символов состоящая из маленьких букв и цифр.</p>', '<p>В выходной поток вывести строку символов.</p>', 0x76617220732c723a737472696e673b0d0a202020202020693a696e74656765723b0d0a626567696e0d0a20202020726561646c6e2873293b0d0a20202020723a3d27273b0d0a20202020666f7220693a3d3120746f206c656e67746828732920646f0d0a202020202020202069662028735b695d20696e205b2730272e2e2739275d29207468656e20723a3d722b735b695d3b0d0a20202020696620286c656e677468287229203e203029207468656e2077726974652872290d0a2020202020202020656c736520777269746528274e4f27293b0d0a656e642e, 'freepascal', 1),
(1008, 1, 3, 8, 'Наибольший символ', '<p>Дана строка, состоящая из заглавных английских букв и цифр. Определить наибольший символ. Символ считается большим, если его код больший.</p>', '<p>В единственной строке входного потока дана строка символов, длина которой не превышает 255.</p>', '<p>В выходной поток вывести единственный символ.</p>', 0x76617220733a737472696e673b0d0a202020202020692c723a696e74656765723b0d0a626567696e0d0a20202020726561646c6e2873293b0d0a20202020723a3d303b0d0a20202020666f7220693a3d3120746f206c656e67746828732920646f0d0a20202020202020206966202872203c206f726428735b695d2929207468656e20723a3d6f726428735b695d293b0d0a20202020777269746528636872287229293b0d0a656e642e, 'freepascal', 1),
(1009, 1, 3, 8, 'Четырёхзначный палиндром', '<p>Требуется написать программу, определяющую, является ли четырехзначное натуральное число N палиндромом, т.е. числом, которое одинаково читается слева направо и справа налево.</p>', '<p>Во входном потоке записано натуральное число N (1000 ≤ N ≤ 9999).</p>', '<p>В выходной поток вывести слово \'YES\', если число N является палиндромом, или \'NO\' - если нет.</p>', 0x76617220733a737472696e673b0d0a202020202020692c722c6e3a696e74656765723b0d0a626567696e0d0a20202020726561646c6e2873293b0d0a20202020723a3d303b0d0a202020206e3a3d6c656e6774682873293b0d0a20202020666f7220693a3d3120746f206e20646f0d0a202020202020202069662028735b695d203c3e20735b6e2b312d695d29207468656e20723a3d722b313b0d0a2020202069662028723d3029207468656e207772697465282759455327290d0a2020202020202020656c736520777269746528274e4f27293b0d0a656e642e, 'freepascal', 1),
(1010, 1, 6, 8, 'Центральный символ', '<p>Строка разбивается на элементы по 5 символов в каждом. Сформировать слово, составленное из вторых символов элементов, содержащих 25-й от начала массива символ.</p>', '<p>Во входном потоке дана единственная строка, состоящая из заглавных английских букви и цифр. Длинна строки - 50 символов.</p>', '<p>В выходной поток вывести единственную строку.</p>', 0x76617220733a737472696e673b0d0a202020202020663a636861723b0d0a202020202020693a696e74656765723b0d0a626567696e0d0a20202020726561642873293b0d0a20202020663a3d735b32355d3b0d0a20202020693a3d313b0d0a202020207768696c652028693c3d35302920646f0d0a202020202069662028735b695d3d6629207468656e20626567696e0d0a2020202020202020206966202869206d6f6420353d3029207468656e20626567696e0d0a20202020202020202020202020777269746528735b692d335d293b0d0a20202020202020202020202020202020693a3d692b313b0d0a20202020202020202020202020202020656e640d0a202020202020202020202020656c7365206966202869206d6f6420353d3129207468656e20626567696e0d0a20202020202020202020202020777269746528735b692b315d293b0d0a20202020202020202020202020202020693a3d692b353b0d0a20202020202020202020202020202020656e640d0a202020202020202020202020656c736520626567696e0d0a20202020202020202020202020777269746528735b692d2069206d6f642035202b325d293b0d0a20202020202020202020202020202020693a3d692b28352d69206d6f642035292b313b0d0a20202020202020202020202020202020656e643b0d0a202020202020202020656e640d0a2020202020202020656c736520693a3d692b313b0d0a656e642e, 'freepascal', 1),
(1011, 1, 4, 8, 'Удалить начальные цифры', '<p>Дана строка. Удалить цифры с начала строки до первой буквы (начальные цифры). Вывести преобразованную строку и количество удаленных символов.</p>', '<p>В единственной строке входного потока дана строка, длинна которой не превышает 255 символов. Строка состоит из маленьких английских букв и цифр.</p>', '<p>В выходной поток вывести преобразованную строку символов и через пробел целое число - количество удаленных символов.<br></p>', 0x76617220733a737472696e673b0d0a202020202020723a696e74656765723b0d0a626567696e0d0a20202020726561646c6e2873293b0d0a20202020723a3d303b0d0a202020207768696c652028735b315d20696e205b2730272e2e2739275d2920616e6420286c656e6774682873293e302920646f20626567696e0d0a202020202020202064656c65746528732c312c31293b0d0a2020202020202020723a3d722b313b0d0a2020202020202020656e643b0d0a20202020777269746528732c2720272c72293b0d0a656e642e, 'freepascal', 1),
(1012, 1, 4, 8, 'Цифры цифры цифры цифры', '<p>Дана строка. Удалить цифры, окруженные с двух строн цифрами и в полученной строке найти сумму индексов символов-цифр.</p>', '<p>В единственной строке входного потока дана строка, длинна которой не превышает 255 символов. Строка состоит из маленьких английских букв и цифр.</p>', '<p>В выходной поток вывести преобразованную строку символов и через пробел целое число - сумму индексов.</p>', 0x76617220733a737472696e673b0d0a202020202020722c693a696e74656765723b0d0a626567696e0d0a20202020726561646c6e2873293b0d0a20202020723a3d303b0d0a20202020693a3d323b0d0a202020200d0a202020207768696c652028693c6c656e6774682873292920646f20626567696e0d0a20202020202020202069662028735b692d315d20696e205b2730272e2e2739275d2920616e642028735b692b315d20696e205b2730272e2e2739275d2920616e642028735b695d20696e205b2730272e2e2739275d29207468656e20626567696e0d0a2020202020202020202020202064656c65746528732c692c31293b0d0a20202020202020202020202020693a3d692d313b0d0a202020202020202020656e643b0d0a202020202020202020693a3d692b313b0d0a20202020656e643b0d0a202020200d0a20202020666f7220693a3d3120746f206c656e67746828732920646f0d0a202020202020202069662028735b695d20696e205b2730272e2e2739275d29207468656e20723a3d722b693b0d0a202020200d0a20202020777269746528732c2720272c72293b0d0a656e642e, 'freepascal', 1),
(1013, 1, 5, 6, 'Простое сравнение', '<p>Даны два массива чисел. Требуется вывести в выходной файл те элементы&nbsp;<span style=\"font-size: 1rem;\">первого массива (в том порядке, в каком они идут в первом массиве),&nbsp;</span><span style=\"font-size: 1rem;\">которых нет во втором массиве.</span></p>', '<p>Во входном файле записано сначала число N - количество элементов в первом&nbsp;<span style=\"font-size: 1rem;\">массиве, затем N чисел - элементы массива.</span></p><p><span style=\"font-size: 1rem;\">Затем записано число M - количество&nbsp;</span><span style=\"font-size: 1rem;\">элементов во втором массиве. Затем записаны элементы второго массива.</span></p><p><span style=\"font-size: 1rem;\">Количество элементов каждого массива не превышает 100. Сами элементы -&nbsp;</span><span style=\"font-size: 1rem;\">числа из диапазона Longint.</span></p>', '<p>В выходной файл выведите те элементы первого массива, которых нет во втором в&nbsp;<span style=\"font-size: 1rem;\">том порядке, в каком они идут в первом массиве.</span></p>', 0x636f6e7374206e6d61783d3130303b0d0a766172206e2c6d3a696e74656765723b0d0a20202020612c623a61727261795b312e2e6e6d61785d206f66206c6f6e67696e743b0d0a20202020692c6a3a696e74656765723b0d0a20202020663a626f6f6c65616e3b0d0a626567696e0d0a72656164286e293b0d0a666f7220693a3d3120746f206e20646f207265616428615b695d293b0d0a72656164286d293b0d0a666f72206a3a3d3120746f206d20646f207265616428625b6a5d293b0d0a666f7220693a3d3120746f206e20646f20626567696e0d0a2020663a3d747275653b0d0a2020666f72206a3a3d3120746f206d20646f0d0a20202020696620615b695d3d625b6a5d207468656e20663a3d66616c73653b0d0a202069662066207468656e20777269746528615b695d2c272027293b0d0a2020656e643b0d0a656e642e, 'freepascal', 1),
(1014, 1, 1, 6, 'Наименьшее', '<p>Дана последовательность чисел. Найти в ней наименьшее число.</p>', '<p>Задано сначала число N (количество чисел в последовательности), а затем&nbsp;<span style=\"font-size: 1rem;\">N чисел. Все числа - из диапазона Integer. N&lt;=100</span></p>', '<p>Выведите наименьшее число.</p>', 0x766172206e2c692c612c623a696e74656765723b0d0a626567696e0d0a72656164286e293b0d0a726561642861293b0d0a666f7220693a3d3220746f206e20646f0d0a2020626567696e0d0a2020726561642862293b0d0a2020696620623c61207468656e20613a3d623b0d0a2020656e643b0d0a77726974656c6e2861293b0d0a656e642e, 'freepascal', 1);

-- --------------------------------------------------------

--
-- Структура таблиці `spm_problems_categories`
--
-- Створення: Бер 29 2018 р., 18:12
--

DROP TABLE IF EXISTS `spm_problems_categories`;
CREATE TABLE IF NOT EXISTS `spm_problems_categories` (
  `id` smallint(5) UNSIGNED NOT NULL AUTO_INCREMENT,
  `sort` smallint(5) UNSIGNED DEFAULT NULL,
  `name` tinytext CHARACTER SET utf8 COLLATE utf8_unicode_ci,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп даних таблиці `spm_problems_categories`
--

INSERT INTO `spm_problems_categories` (`id`, `sort`, `name`) VALUES
(1, 1, 'Лінійні'),
(3, 2, 'Розгалуження'),
(4, 3, 'Цикли з параметром'),
(5, 4, 'Цикли з умовою'),
(6, 6, 'Одномірні массиви'),
(7, 7, 'Багатомірні массиви'),
(8, 8, 'Рядки'),
(9, 9, 'Арифметика'),
(10, 10, 'Динаміка'),
(11, 11, 'Рекурсія'),
(12, 12, 'Моделювання'),
(13, 13, 'Теорія графів'),
(14, 14, 'Множини'),
(15, 15, 'Комбінаторика'),
(16, 16, 'Списки'),
(17, 17, 'Процедури та функції'),
(18, 18, 'Цікава інформатика'),
(19, 19, 'Занимательная физика'),
(20, 20, 'Обов\'язковий мінімум'),
(21, 21, 'Олімпіади, турніри');

-- --------------------------------------------------------

--
-- Структура таблиці `spm_problems_tests`
--
-- Створення: Квт 22 2018 р., 07:02
--

DROP TABLE IF EXISTS `spm_problems_tests`;
CREATE TABLE IF NOT EXISTS `spm_problems_tests` (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `problemId` bigint(20) UNSIGNED NOT NULL,
  `input` longblob,
  `output` longblob,
  `memoryLimit` bigint(20) UNSIGNED NOT NULL DEFAULT '20971520',
  `timeLimit` smallint(5) UNSIGNED NOT NULL DEFAULT '200',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп даних таблиці `spm_problems_tests`
--

INSERT INTO `spm_problems_tests` (`id`, `problemId`, `input`, `output`, `memoryLimit`, `timeLimit`) VALUES
(1, 1001, '', 0x48656c6c6f2c20776f726c6421, 104857600, 200),
(2, 1002, 0x3332303030203332303030, 0x3634303030, 104857600, 200),
(3, 1002, 0x302030, 0x30, 104857600, 200),
(4, 1002, 0x2d3332303030202d3332303030, 0x2d3634303030, 104857600, 200),
(5, 1002, 0x323730372031313034, 0x33383131, 104857600, 200),
(6, 1002, 0x312030, 0x31, 104857600, 200),
(7, 1002, 0x302031, 0x31, 104857600, 200),
(8, 1002, 0x35203137, 0x3232, 104857600, 200),
(9, 1002, 0x352035, 0x3130, 104857600, 200),
(10, 1002, 0x323030302032303030, 0x34303030, 104857600, 200),
(11, 1002, 0x3330303030202d3330303030, 0x30, 104857600, 200),
(12, 1002, 0x3120353030, 0x353031, 104857600, 200),
(13, 1002, 0x3530302031, 0x353031, 104857600, 200),
(14, 1002, 0x3732302032, 0x373232, 104857600, 200),
(15, 1002, 0x38303020383030, 0x31363030, 104857600, 200),
(16, 1003, 0x302030, 0x302e303030, 104857600, 300),
(17, 1003, 0x2d312e33323520312e333235, 0x302e303030, 104857600, 300),
(18, 1003, 0x2d33303030302e3120302e31, 0x2d33303030302e303030, 104857600, 300),
(19, 1003, 0x352e323320372e313235, 0x31322e333535, 104857600, 300),
(20, 1004, 0x414a4853484a4a44484a44484a444b4a4b4c3737334a484a364b4551504f4c4d415a584256, 0x41, 104857600, 200),
(21, 1004, 0x454a4853484a4a44484a44484a444b4a4b4c3737334a484a364b4551504f4c4d415a584256414a4853484a4a44484a44484a444b4a4b4c3737334a484a364b4551504f4c4d415a584256, 0x45, 104857600, 200),
(22, 1004, 0x5a4a4853484a4a44484a44484a444b4a4b4c3737334a484a364b4551504f4c4d415a584256, 0x5a, 104857600, 200),
(23, 1004, 0x4d, 0x4d, 104857600, 200),
(24, 1004, 0x48454c4c4f, 0x48, 104857600, 200),
(25, 1005, 0x51584751574647555556484c4658464e564a4f445a5653594c4d444646425349545256485157434e595a46564d5a42564557435259444c4d4f4d53524342584a5758524855434b5144564e5146495751594753484e444a594e5a50494a46554f4d53534f47594c42584b49544b54464448444e4c59565146524e58444f4842495a45414c55544757434654534c5945585344554b5a49425a44415556464e564a554c554f4d4455455a55474b53454d5a5649584354594654495349494b545552415256595a5547504e4a584b49464c44545057424e4a42535853504f425a594155514a48514c50424d464c485047505250415145414e485156545a47414156, 0x3130, 104857600, 200),
(26, 1005, 0x4e565a4c55534a425a434e4c544742444d4e55544f4152505a5051485a4f4b57514b4555424b4252594c534d534e4454534959415a4a5443545346494f414f5559434a554d4f46444247504b484f524c45424e464f53574947504b46454958425754495a484656524d44594e5344424d4e564942445345494c4e4e524b5847584a434351414b57475744444842594644574c56504b4748594e414f524a565a494e495147534e4e4748495351435651464e584855414b565553434b4d5349414b594a534c51554f494f514f4a455445554d42554b45594a424f4159544d4d4641534e414d5744555945454b4a5652575941464a435647524d4752495a505346, 0x3139, 104857600, 200),
(27, 1005, 0x454a525456535a584b4749484f5a4e46434748434b545a4549435649444d574b5a444e4246554e4a414f4d59474344464e5859525858494e425846544a444f444b534e4d4b42444b455a4951544a555657454143444e464f4242474f574745545a544e5459554852464c56585553464252485555534b504753484357474c4e4452554b5852594d4f5a494e4948505556454155504b4d4f584557484c514646514a55474848594851435751424a4b485a4d414a47454e5a5147464a5447445552414355564b4a47504745555a46554b57584c55435a425753484c4d4f4b455955554344594c4e5a504b5747584e5648574648414c44575145464857494d4755, 0x3134, 104857600, 200),
(28, 1005, 0x445a4b4956444e594e514e4c445347535142464c524550524a504d4e4650584551435441575645594d565744475048474952594c434545415359565459445953515752564a464e4a524d41414949544b455943445753504c494a4b4c5654575946414b4d5a425842515a54464f4a4346575a514249534c484b494e555753424f585a494a4858535659454c4656514248515153454b474e534a484e594d55554457494d444756454143534a4b4d574951504745415457465a45594145475851434e55585850494c51434f534f485649465a4c4b514947524258414958484d53505749434844514c515447444f5659594b595755464647505a43545344565745, 0x3135, 104857600, 200),
(29, 1005, 0x544d554c424b5555425a4e4b4a51584e555456555446524d4e4c49435246465141424f434b564c434a5343514557524b42495348524f4d4b5741444e465044554b4f5557475352534b4557514f4348425a4f52454a4e4255554e46445154595046555145454c4f4f4d52505644464755554f5052494e5044574b4c4b4e55444d4c494c4841424a425a504d485a575643474b49524341585649434d465641525149474f4d554744494e4e494b49574754435248565a5046595355525857494c53525152584956575a534757524c4653584e5757414f515147435547565153454e435a5050434e51414541494f434b564344545a4d5048445741464546465043, 0x3134, 104857600, 200),
(30, 1005, 0x414d41, 0x31, 104857600, 200),
(31, 1005, 0x5252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252, 0x30, 104857600, 200),
(32, 1006, 0x41, 0x5a, 104857600, 200),
(33, 1006, 0x5a, 0x59, 104857600, 200),
(34, 1006, 0x42, 0x41, 104857600, 200),
(35, 1006, 0x4d, 0x4c, 104857600, 200),
(36, 1006, 0x45, 0x44, 104857600, 200),
(37, 1006, 0x4c, 0x4b, 104857600, 200),
(38, 1006, 0x47, 0x46, 104857600, 200),
(39, 1007, 0x473950544150435152534b3054483750374f535a46535130354f325744574d454f54565449425048525152424d57344b5359364c48573158495a49345a514f42455830313548504c4b475a414237393946364d4741585941334c43444b4d455656564650395030454550324a414c4343364f36375338344433575a444e4a384443335550525146423158434457354947414f4f4e5a34514143415a5541454d54355449575453564355315150364f314a38384b4743513953365a425456443537583241305050494d56313953583038504d34544e50565a545133445439425532444c4f323841594d565a503746353639494d435341444a4d56463659585a35, 0x39303737303532343631343031353739393633393032363637383433383331353435313631383839363537323031393038343339323238373536393635, 104857600, 200),
(40, 1007, 0x484653534d495a463457305947475035374d4a5343354a4a58385a51444a4e47524f4d414756534941454f32594b4c574c504943324837375055564f47503349454f3639594c4a3238343334384e4f324c4e4a3635525a344d57334f4942393632444a4b3939424b50504a323451374b3933324f50325749554a314a5338444c595042455752594e513034584b54314e533449354337314a444a4a4748493854305542353639443231585a443551303048544f4d56385a384531554f495538544c394156474656535a36554647535a5530494a4a5057355339595352545853424a453852434b36504851444f4132473244504f41525956464d345035433753, 0x3430353735383232373733363932383433343832363534333936323939323437393332323138303431343537313830353639323135303038383138393630353938363232343537, 104857600, 200),
(41, 1007, 0x434653534a4d504442563252513038325a413434484238435a3536374b3950464f515030413046524858424830554e4a56564c453144584458415a4648575532463835395a5743354447534e415a47575757414c535138474d4a5335474e50303337584e4b5a4e4b335649585452485a51314a383754335247575552565843504e46463253524a53465a584459324c53324b4742524d465731344d385939575050414a31423143335351314b39454f594a53495232524c5350314a4a4854565a464d4738514a594f53384b474636594e423735464231423636494a5539494537595547334b4955595434435152584e4c4b593056435447334e4f3858594830, 0x323038323434383536373930303031323835393538353033373331383733323232313438393131333139323138383637353136363937333430333830, 104857600, 200),
(42, 1007, 0x4a5a5459524b3643344e5754443837313233534e32485446355250523247504a375542414a41585a524f42584444485051513032353548494657515935414f4f485a5145493258564a335235513530364f59335759345256344c463336324b43484a3430505147415331335243524a4e563058334a59563551323833455931494936525336335535583748444e58364e5a4f50523653434b55334737374f4d4942495553554a59425356414c504e44354c46373534345446314843564739465a584544494e3152335a4a544b464b414936523438334d534c344f47323743504356495254554b57434f36564c4a3054504c4943573358365530513945544356, 0x3634383731323332353237303235353532333535303633343433363234303133303335323833313636333537363633373735373534343139313336343833343237363033363039, 104857600, 200),
(43, 1007, 0x363936304641565748494a4938504e4a314f5333394c344f594354314530395a385034483542453451444a56513030344c55544e5a58584c3045435841594345584332305942514c4e45333732544b424c4e42555645364d3032564c4d534c5a4d584448303343595248554356545659433732574e3030344247355232553931354348524d384432494e494b4d364b443536354c3659414f46484f34314d4c594b314d37554f4f51474b4553434c4d4635353049574f504345565858344b4f504957494b5a324b37594e3058434a414b4e44355a5747324c55324d54465638524f3738493638534f465059543642374950324a464746554339384a4b56575a, 0x3639363038313339343130393834353430303430323033373236303230333732303034353239313538323635363536343131373535303432373035323238373836383637323938, 104857600, 200),
(44, 1007, 0x5242484e43485141415a53485a4c4551425842515756554c444546455341424c4c42414a4b42534f4d474843554c52505a59474d5a554c51544c4a4450525057565a5059445354494f415a505052434c4a57444b504c5746544748494853535945414456514a414e4c414e415747434f4e514f5a484e424759535a47584a4a4c50415a55525a4b45464f42475349554c46484d54524647515541504b464a58504245574a43454a5a5644594e544457495249424a52434c485545425a5549594f4554454c4c44434d485a5843594c5257514e41534457524c50494e494f5345484d524e515359565550584a4b46584b5655454e525257464d46504148455357, 0x4e4f, 104857600, 200),
(45, 1007, 0x50474f49525344525a56564d41574e524d4647485144495a4944524d4c4b594643594a5758534b564847445954474357415444465956454b48424f524749414b444844525248414d494756565a48574b474957595057524d514a44494c5848595253465354485a544d5950485957535a41464a4c484d46424c4c5a50505a504c51474243525256584e4848434545444c4359464d4453475a575554434654594941424257425549585256474d464e5a414e49584c4d414d4b5146564f4a4e4f5157525248454b49464556514249444d474c4b544f485a58535a43454c4d484752584e4b4743415459544d584358514a5559445352565958555a4d564243484b, 0x4e4f, 104857600, 200),
(46, 1007, 0x4a4954504c475a4a4546544f445454455745575a43454543564147424251504b58515a4b4c5245434657575741564b47525048425959544759544c4744444e59565a52564a524a4f4853414a424c4a434748535a4c4f434d4758424a4741564c5153524f4b4a5255414744594a53545641414e56444a59475548584d484c415855444b4c534b4c5a4748474255515a5246474b4e5a584849494a4b54554142455a494c5a5144475a5545485a525044424c4454594a4551584f48444255485656484c58534c4557574d435856524e444f4948464d524c46424c4a544c5a50524445555a534c444c4e515a46534b4d5647435849505145544e53584a594e4f43, 0x4e4f, 104857600, 200),
(47, 1007, 0x51584e53424154475759444e445151494441515246484651445155464e42474a464541474c5743425951454159494d4e574a44584343535456414e42574b43574459434d4e44515554564151434e55424a4d5a42505259575758414f4e41594c465a4e41524a4445575553504c48514c4350594e584e57515a4443474e53544f45464d494e445a5a4b534e4a5a494e59504e4a4755494b424a56454b5145524d4349524e4358564255454f47464c5847464f524e43514b4b41594b4d494b4b4f43584a554e50414f4747444b4957564f494b495a454a595444505246595a485a44515545504541445052415a4542544e4255454d4550495257564550575a5a, 0x4e4f, 104857600, 200),
(48, 1007, 0x49574352535a584c4448564b504f4141444347584f5a505a505a50415a4f594e494c584f4d41484b4547424152424f474545434b414a53554744494a5450504d4f545a484b4543585649524d4159504f4d49495745504b52444d475a4c4a4759474f4b5a4d5a4145544f5653474e5353535949554255554b57494a435a43564c5a54535753425151554358554b4c50505a51494e4750504752564a4f51444844414e50485156534b56454a46555a445752545750454d4c514f5455454651515a55474b484b5244485753414f494550564c4d4e574649464b484f5a564957424b4d4651475246434651424854424f465a4953425350444a434c4a514b505955, 0x4e4f, 104857600, 200),
(49, 1008, 0x5255334f5a5238315654414a59463733585035434b454d355943594d5a393142444e43494f314c434a5836474232425757504156554e363945544633504b58313034423248474d57373332374a3059313337594d45565338575756434f544d344c494a534e4757424d54483857314b344c34304948475349493741324f434d484b42475841475343384d5151323758414f4a4e4644384b484432414e4d585548564c465036335a31584f453643304853354a584a38324d4b325a4834484c4d56304f464b4c47514231554b525a593036313951474f3146313855494c514a41334857484550434a3859354c5a59415a464832424631354b4b44314c37413434, 0x5a, 104857600, 200),
(50, 1008, 0x4245314e443852474f5543524352324d41534a4749514841554b4a443146524e513745364145434d4e4b4d3833444a3546383435524534533538374f523033444247354634503033554f38515038314349343736475254384c3150364832323030554e48534c4e31365253334244515430464f3550384d484235454d4c4e4d325035474d4c4855524c413530393731423352434c4236374b30414d3841304a52415242454449514630534d5441514a4b50544c414d445435314c5349484749434f51494a54454d364650464d43474a32424b32304d4d484943434932454d4e483030553033484e493837483350494f30474754534451364a47303638474244, 0x55, 104857600, 200),
(51, 1008, 0x483143414341434b444b5043394d4639423732464238474a4534355155424b554d4d36314a5353453241434854334d5547323653413342485055503854394f4750444b3037333931374d4d4f5551314b384547374c35484650444539484f5144544e4631455534384f5330394634494e30334f363955444737533951524e50414e3442515551334d3249444e48445152554e45434338343632524d4a31324e324e39464c4a4c494744433953344332304f394d4e41544d4b4a425233474f54443941453130494f39523543325554503930375248334752535230323851504c394a4a30433943335349384a4c41474a524d48345346474d42344a5554554f31, 0x55, 104857600, 200),
(52, 1008, 0x364e313150394b39524a3239384a4d323349304635474b3732323349474d414343493030503944494e41444f453939504441434e30524e5046524d484450313049355244343834513935344a4a4a524f304a5033464a3347394735314c353035444b3935, 0x52, 104857600, 200),
(53, 1008, 0x434b4f45434750434731304e304f3046504e343052394536494d414e4a45494b45494f5143524648394d464149464b4247504b334c31353251523045353334354651514a354933363743354948464a344a4a4a4b443644313144383949474a4f30434241, 0x52, 104857600, 200),
(54, 1008, 0x39353631383532353039343632333031313536313739363032363332323831313939323934313131373439363235383633383535343630313139343231383231373332373737353035393938363037353738373933383833313931303630333134323435, 0x39, 104857600, 200),
(55, 1008, 0x31313437333738393532313331313538323538313631313836373930363435353138323130323737393137373334343637333338373431393839303338353436363734383439343137303734393336323630383833393531383433373538313837323931, 0x39, 104857600, 200),
(56, 1008, 0x41424242314232413333333242334134313533313431424134423534323442354131333434314132314142323141323333353531314133333341323234423431423531343331354232414133333535353135423135323533313435343332313134424232, 0x42, 104857600, 200),
(57, 1008, 0x333132323232333231313131313333333131333332333333333332313231, 0x33, 104857600, 200),
(58, 1008, 0x31, 0x31, 104857600, 200),
(59, 1008, 0x59, 0x59, 104857600, 200),
(60, 1009, 0x39393939, 0x594553, 104857600, 200),
(61, 1009, 0x31323231, 0x594553, 104857600, 200),
(62, 1009, 0x31313131, 0x594553, 104857600, 200),
(63, 1009, 0x31323334, 0x4e4f, 104857600, 200),
(64, 1009, 0x35383637, 0x4e4f, 104857600, 200),
(65, 1009, 0x36353536, 0x594553, 104857600, 200),
(66, 1009, 0x35363536, 0x4e4f, 104857600, 200),
(67, 1011, 0x79, 0x792030, 104857600, 200),
(68, 1011, 0x39, 0x31, 104857600, 200),
(69, 1011, 0x616d79, 0x616d792030, 104857600, 200),
(70, 1011, 0x6d626b34366f78647776343777616765376c65707134323764343178693630706164787965623063386e67756d3638797a6533703578376c6371696469666a786a316f6e7a71776f6c716130677866776c613632317437316e6c706a777630386864636e776669647979756275783376647064636e3862377a6274657931323768326f386268663034346538746e723474707379686c38707a72326879357168673968346f3332656631376874703272336563786278323473706e6a697679386869377163746d35727033716b36706b3932693964676d736c336d67766b643176636e7174756d616b65396f3476356e347837356b6b6f3261376937763765, 0x6d626b34366f78647776343777616765376c65707134323764343178693630706164787965623063386e67756d3638797a6533703578376c6371696469666a786a316f6e7a71776f6c716130677866776c613632317437316e6c706a777630386864636e776669647979756275783376647064636e3862377a6274657931323768326f386268663034346538746e723474707379686c38707a72326879357168673968346f3332656631376874703272336563786278323473706e6a697679386869377163746d35727033716b36706b3932693964676d736c336d67766b643176636e7174756d616b65396f3476356e347837356b6b6f32613769377637652030, 104857600, 200),
(71, 1011, 0x683832673733777a67776271397a676b62727868637a7230636a3168336e6c776866646631656e7a69337761376e6a713736327a6b6268313575306636736f7475626230736b70756939716467746673636d74696167716a6c7562613368767139746b6e65393364376e7634727a696f67313768757771676773306e6e7366386d62656e7064326a627738746e6f35316d72726b6639343538707579366c65313366726e7162716a6a6a716a673538656c766f777a75327161616e66776e716e623671313634363664646267383264797968736538673774766334776479636e6b3836716c617874343236646932707835703077393334687731676e6e746b, 0x683832673733777a67776271397a676b62727868637a7230636a3168336e6c776866646631656e7a69337761376e6a713736327a6b6268313575306636736f7475626230736b70756939716467746673636d74696167716a6c7562613368767139746b6e65393364376e7634727a696f67313768757771676773306e6e7366386d62656e7064326a627738746e6f35316d72726b6639343538707579366c65313366726e7162716a6a6a716a673538656c766f777a75327161616e66776e716e623671313634363664646267383264797968736538673774766334776479636e6b3836716c617874343236646932707835703077393334687731676e6e746b2030, 104857600, 200),
(72, 1011, 0x39707870696a686377727a716f706336753438707931776e6c6e316c716f3878336e68316a37617434763075776a6c666b3661717a6b7a6776667934346e306a37746b34726f63373075746a7a7a3578636773636e7136756f763935376a7867387931347633717974723065676c7831783436656d6e666e326a67617271303432627638666968676e7a6d386a33623363333039633336747773786e333933746b74757368626f396a796f3571636b7575756e7371663561677574656e6e7269646772766434393862626e39613163386c337a7a726d34367073647069673235736d7076386b38713738636b387a6c6a6c756f7a77617a6776796c77786b34, 0x707870696a686377727a716f706336753438707931776e6c6e316c716f3878336e68316a37617434763075776a6c666b3661717a6b7a6776667934346e306a37746b34726f63373075746a7a7a3578636773636e7136756f763935376a7867387931347633717974723065676c7831783436656d6e666e326a67617271303432627638666968676e7a6d386a33623363333039633336747773786e333933746b74757368626f396a796f3571636b7575756e7371663561677574656e6e7269646772766434393862626e39613163386c337a7a726d34367073647069673235736d7076386b38713738636b387a6c6a6c756f7a77617a6776796c77786b342031, 104857600, 200),
(73, 1011, 0x333939393634393539323636363037353838313831333933343235303033353132383332383139333238333732393739323136363133303139323336303930333635323031393733313832323739353034363232363531323637353630323530363836383031313832313830373430383232323639383638303330393832373134383635343433313430373630373132373435323038323537333837383433363339383536353130353836393033313035343238323633393134323438393531333332333638343833343836353232393234323339373631363736353638303330323438383132303034343634393735373433343838363334333236333737, 0x323535, 104857600, 200),
(74, 1012, 0x333939393634393539323636363037353838313831333933343235303033353132383332383139333238333732393739323136363133303139323336303930333635323031393733313832323739353034363232363531323637353630323530363836383031313832313830373430383232323639383638303330393832373134383635343433313430373630373132373435323038323537333837383433363339383536353130353836393033313035343238323633393134323438393531333332333638343833343836353232393234323339373631363736353638303330323438383132303034343634393735373433343838363334333236333737, 0x33372033, 104857600, 200),
(75, 1012, 0x303930393931373732343335343239313634323933383238393032333730303235303235313633353732333836343334313930383139313035393037303733383139363736383133353638383133383230383939393530353830313733333932323331393039383034333433333835, 0x30352033, 104857600, 200),
(76, 1012, 0x333939393634393539323636363037353838313831333933, 0x33332033, 104857600, 200),
(77, 1012, 0x77776c6d777964713668387a6d6168723135793833707761376c6b6131656b636b73633973357433313879783068786e637a34656a76337074313532776479643636726139796a66773362766e393379397767697530766c7a736c6479786366357769656836313777746c6d36796936643476677175346b696d65386e63796c6a693431347864356769613863776666673470366774726834697a72776d6e6e326366313779693230646c65697a746934693667616331716877706c643132786975316b38326875667734353038396e7868703873716e6f627a61697378377a37306c646c6a65697a696d6934396a6c6b726e33636d303368716769377a39, 0x77776c6d777964713668387a6d6168723135793833707761376c6b6131656b636b736339733574333879783068786e637a34656a763370743132776479643636726139796a66773362766e393379397767697530766c7a736c64797863663577696568363777746c6d36796936643476677175346b696d65386e63796c6a6934347864356769613863776666673470366774726834697a72776d6e6e326366313779693230646c65697a746934693667616331716877706c643132786975316b38326875667734396e7868703873716e6f627a61697378377a37306c646c6a65697a696d6934396a6c6b726e33636d303368716769377a392038313834, 104857600, 200),
(78, 1012, 0x73626e7577726d33703773756532327567636f66366231626f6d6d35777a68383367393733637a74796d66737376706161626e336b6f316f6d6a336c6738727a79346a7078703036316f30686a657332693838723434646d7363766f346e6561326a316330766e63336d3161736977796763316f656b6635356d3667736436337072666d373965626d31366a7264623435773763736e6f766e77756474356d773079327568693634326f75346871796b6e7567396c316b3434636e37666d716437707070773564727039326b626563697061326a6c6b6c767838306e7475367a6b383862767072726535656463746c6d773869636471386a6c796b30366c38, 0x73626e7577726d33703773756532327567636f66366231626f6d6d35777a683833673933637a74796d66737376706161626e336b6f316f6d6a336c6738727a79346a70787030316f30686a657332693838723434646d7363766f346e6561326a316330766e63336d3161736977796763316f656b6635356d3667736436337072666d373965626d31366a7264623435773763736e6f766e77756474356d7730793275686936326f75346871796b6e7567396c316b3434636e37666d716437707070773564727039326b626563697061326a6c6b6c767838306e7475367a6b383862767072726535656463746c6d773869636471386a6c796b30366c382038383737, 104857600, 200),
(79, 1012, 0x6f747531677a30676479377432693433766f756d72326d6e346971787a717774343931616f647674356f366c366d3378786974623479707937346e6377626e70367538346e6c716d7833317234783465676a376d3164643761336c38326f39326b6f746a346d7878726568727077316a617a6761796f366f3071396667703736317734666268787a6e69717864776736796e637a676432636b79777a67387865357939316c776568746b6b31636a757561336a676e636e3838617364627a7036736965356c66756a626232356c6c77766878377469656c38627a616d6471317177623964796f766c38326139676a69666c78717a786b6275326a317376666d, 0x6f747531677a30676479377432693433766f756d72326d6e346971787a7177743431616f647674356f366c366d3378786974623479707937346e6377626e70367538346e6c716d7833317234783465676a376d3164643761336c38326f39326b6f746a346d7878726568727077316a617a6761796f366f30713966677037317734666268787a6e69717864776736796e637a676432636b79777a67387865357939316c776568746b6b31636a757561336a676e636e3838617364627a7036736965356c66756a626232356c6c77766878377469656c38627a616d6471317177623964796f766c38326139676a69666c78717a786b6275326a317376666d2037313730, 104857600, 200),
(80, 1012, 0x396a777268326a6f3471696c33637771723865627065663936653339653063797938366539626f39686b756871347567327239366d6e6f336d6530673666367a7732626f7734316967766977303671367932757331317332656f6d63396f346161616461683837346e6277657367763863356967676874336e6b6e6131323436383468757130616d363876376e697a7a66676d7235356372787a65347768647065777266717864786d796b3278796578696467656438373430617538376274657376773932693472376a34737964357334636d68376f6866626575356b6e7237306231327262653062346f6c666d6870337264356230346439376d6c76766d, 0x396a777268326a6f3471696c33637771723865627065663936653339653063797938366539626f39686b756871347567327239366d6e6f336d6530673666367a7732626f7734316967766977303671367932757331317332656f6d63396f3461616164616838346e6277657367763863356967676874336e6b6e61313468757130616d363876376e697a7a66676d7235356372787a65347768647065777266717864786d796b327879657869646765643830617538376274657376773932693472376a34737964357334636d68376f6866626575356b6e7237306231327262653062346f6c666d6870337264356230346439376d6c76766d2038393331, 104857600, 200),
(81, 1012, 0x746930387976776134377a356168717769677263623932386d6f72347168666b7379676379363130366d3478376e6c6372356873666865793369633564696838326a39366e6473707273657770386e326b343769707937686a6e76753170756c6c6b3472743232377878366e7a7a6b6467346874647273693763306b6f6f6f3277736567626377767235776e6437317334366572736c317576786334716562743663373666706167767438306d386d746273653163376d726331726a69673967677234366c6f756e773733326e726a3567626f366b6f6c7a346d663779753170397a6a7269366f6832687535746b6839786270627274667664656f36786366, 0x746930387976776134377a3561687177696772636239386d6f72347168666b737967637936366d3478376e6c6372356873666865793369633564696838326a39366e6473707273657770386e326b343769707937686a6e76753170756c6c6b34727432377878366e7a7a6b6467346874647273693763306b6f6f6f3277736567626377767235776e6437317334366572736c317576786334716562743663373666706167767438306d386d746273653163376d726331726a69673967677234366c6f756e7737326e726a3567626f366b6f6c7a346d663779753170397a6a7269366f6832687535746b6839786270627274667664656f367863662037393438, 104857600, 200),
(82, 1010, 0x6b73766a6f31767533777565716d306c766d71636d706e6670327063326e69373469706d74356a6d7633777a366f70627576, 0x70703770, 104857600, 200),
(83, 1010, 0x33727961737576696a7464703762746a646a6d79747376687579686737696b66746b3935777a33747066396b637064716977, 0x7673, 104857600, 200),
(84, 1010, 0x623662366c6e37366866733766396d646a6377316a32356f6d6f6c756c686b6830777a76746b6e3339317633303967766364, 0x3732, 104857600, 200),
(85, 1010, 0x656d71356f67306a71726b653877653538383034667337307977753378687830336c32396f6667797a6a76786f7569776e75, 0x736f, 104857600, 200),
(86, 1010, 0x703330386b6a766c6470746e676b78777a74356e666366306a39746275326b376177623373336134767667663964696b6964, 0x7663, 104857600, 200),
(87, 1010, 0x6d323634327334736c66346661366470367278367036687a7939616636766f37646e647778736f6964686f616e6c756c6e71, 0x36, 104857600, 200),
(88, 1010, 0x616733347979386c766670786a6e686d6f7562776137633175346b68366731656979616165787974366676356d696e333177, 0x6f37, 104857600, 200),
(89, 1010, 0x75617a6a787a6276777032327479676d77366276666e70356c3164666c6f647566766a74706739706868697a666267366634, 0x6e64, 104857600, 200),
(90, 1010, 0x6f6a7669656b6962376b37376c63793176326737776877367239676e6d6e77656e6a62376a3331686e6c6868356271657569, 0x68, 104857600, 200),
(91, 1010, 0x75646c6f63757a39797678753834706d666e3070633169757975317667363164326c736168726f6f677379616771366f7932, 0x7a317336, 104857600, 200),
(92, 1013, 0x370d0a33203120332034203220342031320d0a360d0a3420313520343320312031352031, 0x3320332032203132, 20971520, 200),
(93, 1013, 0x31350d0a31203220332034203520362037203820392031302031312031322031332031342031350d0a390d0a3135203133203131203920372035203320312038, 0x3220342036203130203132203134, 20971520, 200),
(94, 1013, 0x36330d0a2d37353420313532203432362038373820353339202d323631202d35373420313738202d363530202d3735322036363720313631202d3731202d333131202d3735332034333920373739202d3438202d393831203735342035393820393233202d34383920313931202d363233202d3234382038353620343635202d3230312032353320313132202d32353320343734202d373031202d33323020363035203438392035373520373131202d34313020383635202d38333120333832202d393234203239202d32303320353638202d333539202d39203831202d3436312035343520373931203434322036303220363339202d32333920383530202d383331202d39303920353830202d35313720383032200d0a35350d0a2d343239203239322037353620373137202d36393520323433202d363436202d32353020323634202d383630202d39353220323232202d3738322034363520313436202d37333520363732202d31303030203230352035343220393131202d333032202d373831202d353032202d31303520323138202d3639352038323920393031202d353033203734332031353920363738202d353534203830372034333720353830202d393430203238312036303520383439203735382038323020313039202d343635202d373932202d33383220323231202d31313520343837202d363030202d313633203435362037333820343538, 0x2d37353420313532203432362038373820353339202d323631202d35373420313738202d363530202d3735322036363720313631202d3731202d333131202d3735332034333920373739202d3438202d393831203735342035393820393233202d34383920313931202d363233202d32343820383536202d3230312032353320313132202d32353320343734202d373031202d333230203438392035373520373131202d34313020383635202d38333120333832202d393234203239202d32303320353638202d333539202d39203831202d3436312035343520373931203434322036303220363339202d32333920383530202d383331202d393039202d35313720383032, 20971520, 200),
(95, 1014, 0x370d0a36203520342033203220312030, 0x30, 20971520, 200),
(96, 1014, 0x360d0a3120322033203420352036, 0x31, 20971520, 200),
(97, 1014, 0x360d0a3320382037203620352034, 0x33, 20971520, 200),
(98, 1014, 0x380d0a32203520312036202d33203520322035, 0x2d33, 20971520, 200),
(99, 1014, 0x3130300d0ax32, 20971520, 200);

-- --------------------------------------------------------

--
-- Структура таблиці `spm_submissions`
--
-- Створення: Чрв 03 2018 р., 10:13
-- Останнє оновлення: Лип 30 2018 р., 19:57
--

DROP TABLE IF EXISTS `spm_submissions`;
CREATE TABLE IF NOT EXISTS `spm_submissions` (
  `submissionId` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `previous_count` bigint(20) UNSIGNED DEFAULT NULL,
  `olympId` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `seen` tinyint(1) NOT NULL DEFAULT '0',
  `codeLang` tinytext NOT NULL,
  `userId` bigint(20) NOT NULL,
  `problemId` bigint(20) UNSIGNED NOT NULL,
  `testType` enum('unset','syntax','debug','release') NOT NULL DEFAULT 'unset',
  `judge` tinytext NOT NULL,
  `problemCode` mediumblob NOT NULL,
  `customTest` blob,
  `status` enum('waiting','processing','ready') NOT NULL DEFAULT 'waiting',
  `hasError` tinyint(1) NOT NULL DEFAULT '0',
  `errorOutput` mediumtext,
  `output` blob,
  `exitcodes` mediumtext,
  `usedProcTime` text,
  `usedMemory` text,
  `compiler_text` blob,
  `tests_result` text,
  `b` double UNSIGNED NOT NULL DEFAULT '0',
  PRIMARY KEY (`submissionId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Problem submissions';

-- --------------------------------------------------------

--
-- Структура таблиці `spm_supported_judges`
--
-- Створення: Лип 22 2018 р., 10:23
-- Останнє оновлення: Лип 30 2018 р., 19:56
--

DROP TABLE IF EXISTS `spm_supported_judges`;
CREATE TABLE IF NOT EXISTS `spm_supported_judges` (
  `id` smallint(6) NOT NULL AUTO_INCREMENT,
  `name` tinytext NOT NULL,
  `owner_server_id` tinytext NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`(255))
) ENGINE=InnoDB DEFAULT CHARSET=ascii;

-- --------------------------------------------------------

--
-- Структура таблиці `spm_supported_languages`
--
-- Створення: Лип 06 2018 р., 08:14
-- Останнє оновлення: Лип 30 2018 р., 19:56
--

DROP TABLE IF EXISTS `spm_supported_languages`;
CREATE TABLE IF NOT EXISTS `spm_supported_languages` (
  `id` smallint(6) NOT NULL AUTO_INCREMENT,
  `title` tinytext CHARACTER SET utf8 NOT NULL,
  `name` tinytext NOT NULL,
  `syntax_name` tinytext NOT NULL,
  `owner_server_id` tinytext NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`(255))
) ENGINE=InnoDB DEFAULT CHARSET=ascii;

-- --------------------------------------------------------

--
-- Структура таблиці `spm_teacherid`
--
-- Створення: Бер 29 2018 р., 18:12
--

DROP TABLE IF EXISTS `spm_teacherid`;
CREATE TABLE IF NOT EXISTS `spm_teacherid` (
  `userId` bigint(20) UNSIGNED NOT NULL,
  `teacherId` tinytext NOT NULL,
  `enabled` tinyint(1) NOT NULL DEFAULT '1',
  `newUserPermission` int(11) NOT NULL DEFAULT '2',
  PRIMARY KEY (`userId`),
  UNIQUE KEY `teacherId` (`teacherId`(15))
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Структура таблиці `spm_users`
--
-- Створення: Квт 16 2018 р., 11:50
-- Останнє оновлення: Лип 30 2018 р., 19:58
--

DROP TABLE IF EXISTS `spm_users`;
CREATE TABLE IF NOT EXISTS `spm_users` (
  `id` bigint(8) UNSIGNED NOT NULL AUTO_INCREMENT,
  `sessionId` text CHARACTER SET utf8 COLLATE utf8_bin,
  `last_online` datetime NOT NULL DEFAULT '2001-07-27 10:30:00',
  `avatar` mediumblob,
  `password` tinytext NOT NULL,
  `firstname` tinytext NOT NULL,
  `secondname` tinytext NOT NULL,
  `thirdname` tinytext NOT NULL,
  `birthday_date` date NOT NULL DEFAULT '2000-01-01',
  `email` tinytext CHARACTER SET ascii NOT NULL,
  `teacherId` bigint(20) UNSIGNED NOT NULL,
  `permissions` smallint(5) UNSIGNED NOT NULL,
  `institution` tinytext,
  `groupid` int(10) UNSIGNED NOT NULL,
  `associated_olymp` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`(255))
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Структура таблиці `spm_users_groups`
--
-- Створення: Бер 29 2018 р., 18:12
--

DROP TABLE IF EXISTS `spm_users_groups`;
CREATE TABLE IF NOT EXISTS `spm_users_groups` (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` tinytext NOT NULL,
  `teacherId` bigint(20) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='User groups';
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
